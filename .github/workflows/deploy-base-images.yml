#
name: Build base (with ROOT) Docker image

# Configures this workflow to run every time a change is pushed to the branch called `release`.
on:
  push:
    paths:
      - KingMaker_envs/Base_env.yml
      - '*/Dockerfile'

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME7: ${{ github.repository }}-centos7
  IMAGE_NAME9: ${{ github.repository }}-rhel9
  IMAGE_NAME_UBUNTU2204: ${{ github.repository }}-ubuntu2204
  ENV_FILE: Base_env.yml
  ENV_NAME: base

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  Build-CentOS7:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Get short hash of the current commit
        id: get_short_hash
        run: echo "::set-output name=short_hash::$(git rev-parse --short HEAD)"
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME7 }}-${{env.ENV_NAME}}
      - name: Copy env file
        run: cp KingMaker_envs/${{env.ENV_FILE}}  centos7/conda_env.yml
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          file: centos7/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}_${{ steps.get_short_hash.outputs.short_hash }}
          labels: ${{ steps.meta.outputs.labels }}

  Build-RHEL9:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Get short hash of the current commit
        id: get_short_hash
        run: echo "::set-output name=short_hash::$(git rev-parse --short HEAD)"
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME9 }}-${{env.ENV_NAME}}
      - name: Copy env file
        run: cp KingMaker_envs/${{env.ENV_FILE}} rhel9/conda_env.yml
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          file: rhel9/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}_${{ steps.get_short_hash.outputs.short_hash }}
          labels: ${{ steps.meta.outputs.labels }}

  Build-Ubuntu2204:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Get short hash of the current commit
        id: get_short_hash
        run: echo "::set-output name=short_hash::$(git rev-parse --short HEAD)"
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_UBUNTU2204 }}-${{env.ENV_NAME}}
      - name: Copy env file
        run: cp KingMaker_envs/${{env.ENV_FILE}} ubuntu2204/conda_env.yml
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          file: ubuntu2204/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}_${{ steps.get_short_hash.outputs.short_hash }}
          labels: ${{ steps.meta.outputs.labels }}
